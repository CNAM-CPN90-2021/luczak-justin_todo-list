{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","hooks/useToDoList.ts","pages/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","useToDoList","useStorage","get","set","remove","listStocked","useState","listItems","updateList","counterTodo","setCounterTodo","addCounterTodo","count","JSON","stringify","removeCounterTodo","useEffect","number","parseInt","listJson","parse","addItem","text","newItem","length","checked","newTable","concat","toggleItem","updatedList","item","undefined","removeAllItems","removeItem","newList","modifieItem","Home","value","setText","segmentValue","setSegmentValue","showActionSheet","setShowActionSheet","showModifieAlert","setShowModifieAlert","itemToModifie","setItemToModifie","showDeleteAllAlert","setShowDeleteAllAlert","fullscreen","collapse","size","className","onIonChange","detail","color","key","slot","fill","onClick","icon","create","isOpen","onDidDismiss","cssClass","buttons","role","trash","handler","close","header","inputs","name","type","placeholder","data","message","blah","console","log","inputmode","clearInput","autofocus","required","App","path","component","exact","render","to","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4HAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,GACA,GAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,0BAA2B,CAC1B,GACA,IAED,6BAA8B,CAC7B,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,wBAAyB,CACxB,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,sBAAuB,CACtB,GACA,IAED,uBAAwB,CACvB,GACA,IAED,4BAA6B,CAC5B,GACA,IAED,uBAAwB,CACvB,GACA,IAED,qBAAsB,CACrB,GACA,IAED,mCAAoC,CACnC,GACA,IAED,uBAAwB,CACvB,GACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B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","file":"static/js/main.45cb7916.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t84,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t85,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t86,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t87,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t88,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t89,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t90,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t91,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t92,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t93,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t94,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t95,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t96,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t97,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t98,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t99,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t100,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t101,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t102,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t103,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t104,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t105,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t106,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t107,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t108,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t109,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t110,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t111,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t112,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t113,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t114,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t115,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t116,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t117,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t118,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t119,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t120,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t121,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t122,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t123,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t124,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t125,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t126,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 63;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t128,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 65;\nmodule.exports = webpackAsyncContext;","import { useStorage } from '@capacitor-community/react-hooks/storage';\nimport { useEffect, useState } from 'react';\n\n\nexport function useToDoList() {\n\n    // import des fonctions de stockage local\n    const { get, set, remove } = useStorage();\n\n    // déclaration de la liste d'items\n    let listStocked = [];\n    let [listItems, updateList] = useState(listStocked);\n\n    // compteur tâches à faire\n    let [counterTodo, setCounterTodo] = useState(0);\n\n    // fonction pour initialiser le compteur d'items non cochés et synchroniser les données stockées en local\n    function getCounterTodo() {\n        get('counterTodo').then((number) => {\n            if (number != null) {\n                setCounterTodo(parseInt(number))\n            }\n            else {\n                setCounterTodo(0)\n            }\n        })\n    }\n\n    // hook pour utiliser la fonction une seule fois lors de l'affichage de la page\n    useEffect(() => {\n        getCounterTodo()\n    }, [])\n\n    // fonction pour ajouter 1 au compteur\n    function addCounterTodo() {\n        let count = counterTodo\n        count = count + 1\n        setCounterTodo(count)\n        set('counterTodo', JSON.stringify(count))\n    }\n\n    // fonction pour enelever 1 au compteur\n    function removeCounterTodo() {\n        let count = counterTodo\n        count = count - 1\n        setCounterTodo(count)\n        set('counterTodo', JSON.stringify(count))\n    }\n\n    // fonction pour initialiser la liste stockées en local\n    function getStockedList() {\n        get('listTodo').then((listJson) => {\n            if (listJson != null) {\n                listStocked = JSON.parse(listJson);\n\n                updateList(listStocked)\n            }\n        })\n    }\n\n    // appeler la fonction une seule fois pour initialiser les items stockés en local\n    useEffect(() => {\n        getStockedList()\n    }, [])\n\n    // fonction pour ajouter des items à la liste\n    function addItem(text) {\n\n        // on prépare l'id pour le nouvel objet en prenant le dernier id du tableau actuel et on retire 1 pour débuter à la bonne valeur \n        let lengthList = listItems.length - 1\n\n        const newItem = {\n            id: lengthList + 1,\n            text: text,\n            checked: false\n        }\n\n        // on stocke le nouveau tableau avec le nouvel item dans une variable pour l'utiliser dans la fonction update après\n        const newTable = listItems.concat([newItem])\n\n        // on ajoute 1 au compteur lors de la création d'une tâche\n        addCounterTodo()\n\n        // on ajoute le nouveau tableau au sotckage en local\n        set('listTodo', JSON.stringify(newTable))\n\n        // on update la liste en mémoire\n        updateList(newTable)\n    }\n\n    // fonction pour retirer manuellement une tâche\n    function removeItem(id) {\n        // on copie la liste afin de pouvoir la manipuler\n        let newList = listItems\n\n        // on vérifie si l'item est coché ou non\n        if (newList[id].checked === false) {\n            // on enlève 1 au compteur\n            removeCounterTodo();\n        }\n\n        // on supprime l'item voulu dans la nouvelle liste\n        delete newList[id]\n\n        // on ajoute les nouvelles valeurs dans le tableau stocké en local\n        set('listTodo', JSON.stringify(newList))\n\n        // on update les nouvelles valeurs en mémoire\n        updateList(newList)\n    }\n\n    // fonction pour modifier le texte d'un item\n    function modifieItem(id, text) {\n        // on copie la liste pour pouvoir la modifier\n        let newList = listItems\n        // on attribut la nouvelle valeur du text à la nouvelle liste\n        newList[id].text = text\n\n        // on ajoute les nouvelles valeurs dans le tableau stocké en local\n        set('listTodo', JSON.stringify(newList))\n\n        // on update les nouvelles valeurs en mémoire\n        updateList(newList)\n    }\n\n    // fonction pour passer un item de coché à non coché et inversement\n    function toggleItem(id) {\n        const updatedList = listItems.map(item => {\n            if (item != undefined && item.id === id) {\n                item.checked = !item.checked\n            }\n            return item\n        })\n\n        // on ajoute les nouvelles valeurs dans le tableau stocké en local\n        set('listTodo', JSON.stringify(updatedList))\n\n        // on update les nouvelles valeurs en mémoire\n        updateList(updatedList)\n    }\n\n    // fonction pour retirer tous les items de la liste\n    function removeAllItems() {\n\n        // on enlève la liste stockée en local\n        remove('listTodo');\n\n        // on vide la liste stockée en mémoire\n        updateList([]);\n\n        // on enlève le compteur stocké en local\n        set('counterTodo', JSON.stringify(0));\n\n        // on réinitialise le compteur en mémoire\n        setCounterTodo(0);\n    }\n\n\n    return {\n        listItems, addItem, toggleItem, removeAllItems, counterTodo, setCounterTodo, removeCounterTodo, addCounterTodo, removeItem, modifieItem\n    }\n\n}","import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonList, IonItem, IonLabel, IonInput, IonButton, IonCheckbox, IonIcon, IonSegment, IonSegmentButton, IonBadge, IonActionSheet, IonAlert, IonItemGroup, IonFooter, IonGrid } from '@ionic/react';\nimport React from 'react';\nimport './Home.css';\nimport { useToDoList } from '../hooks/useToDoList';\nimport { useState } from \"react\";\nimport { create, trash, close } from 'ionicons/icons';\n\n\nconst Home: React.FC = () => {\n  // import des fonctions et variables\n  const { addItem, listItems, toggleItem, removeAllItems, counterTodo, removeCounterTodo, addCounterTodo, removeItem, modifieItem } = useToDoList();\n\n  // texte à ajouter pour un nouvel item\n  const [text, setText] = useState<any>();\n\n  // état du tri de la liste\n  let [segmentValue, setSegmentValue] = useState('all');\n\n  // état de l'affichage de la feuille d'action\n  let [showActionSheet, setShowActionSheet] = useState(false);\n\n  // état de l'affichage de l'alerte de modification de l'item\n  let [showModifieAlert, setShowModifieAlert] = useState(false);\n\n  // sélecteur de l'id de l'item à modifier ou à supprimer\n  let [itemToModifie, setItemToModifie] = useState<number>();\n\n  // état de l'affichage de l'alerte de suppression de toutes les tâches\n  const [showDeleteAllAlert, setShowDeleteAllAlert] = useState(false);\n\n  // fonction pour afficher les items dans la liste\n  const displayItems = (value) => {\n\n    // afficher un message différent si la liste est vide\n    if (listItems.length === 0) {\n      return <IonItem><IonLabel>Félicitation votre liste est vide</IonLabel></IonItem>\n    }\n\n    // sinon on affiche la liste \n    else {\n\n      // pour afficher tous les items\n      if (value === 'all') {\n\n        return listItems.map((item) => {\n\n          // ne pas afficher les items supprimés manuellement\n          // trie des items non cochés afin de les compter\n          if (item != undefined && item.checked === false) {\n            return (\n              <IonItem key={item.id}>\n                <IonCheckbox slot=\"start\" color=\"primary\" checked={item.checked} onIonChange={(e) => {\n                  toggleItem(item.id)\n                  removeCounterTodo()\n                }} />\n                <IonLabel className={item.checked ? 'checked' : ''}>{item.text}</IonLabel>\n\n                <IonButton fill='clear' onClick={() => {\n                  setShowActionSheet(true)\n                  setItemToModifie(item.id)\n                }}><IonIcon icon={create} color=\"primary\" slot=\"end\" /></IonButton>\n\n\n                <IonActionSheet\n                  isOpen={showActionSheet}\n                  onDidDismiss={() => setShowActionSheet(false)}\n                  cssClass='my-custom-class'\n                  buttons={[{\n                    text: 'Supprimer',\n                    role: 'destructive',\n                    icon: trash,\n                    handler: () => {\n                      removeItem(itemToModifie)\n                    }\n                  },\n                  {\n                    text: 'Modifier',\n                    icon: create,\n                    handler: () => {\n                      setShowModifieAlert(true)\n                    }\n                  }, {\n                    text: 'Annuler',\n                    icon: close,\n                    role: 'cancel',\n                  }]}\n                >\n                </IonActionSheet>\n\n\n\n                <IonAlert\n                  isOpen={showModifieAlert}\n                  onDidDismiss={() => setShowModifieAlert(false)}\n                  header={'Renommez votre tâche'}\n                  inputs={[\n                    {\n                      name: 'text',\n                      type: 'text',\n                      placeholder: 'Nouveau nom de la tâche',\n                    }]}\n                  buttons={[\n                    {\n                      text: 'Annuler',\n                      role: 'cancel',\n                      cssClass: 'secondary',\n                    },\n                    {\n                      text: 'Valider',\n                      handler: data => {\n                        modifieItem(itemToModifie, data.text)\n                      }\n                    }\n                  ]}\n                />\n              </IonItem>\n            )\n          }\n\n          // on affiche les items cochés sans les compter\n          else if (item != undefined) {\n            return (\n              <IonItem className='transparent50' key={item.id}>\n                <IonCheckbox slot=\"start\" color=\"primary\" checked={item.checked} onIonChange={(e) => {\n                  toggleItem(item.id)\n                  addCounterTodo()\n                }} />\n                <IonLabel className={item.checked ? 'checked' : ''}>{item.text}</IonLabel>\n\n                <IonButton fill='clear' onClick={() => {\n                  setShowActionSheet(true)\n                  setItemToModifie(item.id)\n                }}><IonIcon icon={create} color=\"primary\" slot=\"end\" /></IonButton>\n\n\n                <IonActionSheet\n                  isOpen={showActionSheet}\n                  onDidDismiss={() => setShowActionSheet(false)}\n                  cssClass='my-custom-class'\n                  buttons={[{\n                    text: 'Supprimer',\n                    role: 'destructive',\n                    icon: trash,\n                    handler: () => {\n                      removeItem(itemToModifie)\n                    }\n                  },\n                  {\n                    text: 'Modifier',\n                    icon: create,\n                    handler: () => {\n                      setShowModifieAlert(true)\n                    }\n                  }, {\n                    text: 'Annuler',\n                    icon: close,\n                    role: 'cancel',\n                  }]}\n                >\n                </IonActionSheet>\n\n                <IonAlert\n                  isOpen={showModifieAlert}\n                  onDidDismiss={() => setShowModifieAlert(false)}\n                  header={'Renommez votre tâche'}\n                  inputs={[\n                    {\n                      name: 'text',\n                      type: 'text',\n                      placeholder: 'Nouveau nom de la tâche',\n                    }]}\n                  buttons={[\n                    {\n                      text: 'Annuler',\n                      role: 'cancel',\n                      cssClass: 'secondary',\n                    },\n                    {\n                      text: 'Valider',\n                      handler: data => {\n                        modifieItem(itemToModifie, data.text)\n                      }\n                    }]} /></IonItem>)\n          }\n        })\n      }\n\n      // trie des items non cochés\n      else if (value === 'unchecked') {\n        return (\n          listItems.map((item) => {\n            // ne pas afficher les items supprimés manuellement\n            // traite uniquement les items non cochés\n            if (item != undefined && item.checked === false) {\n              return (\n                < IonItem key={item.id} >\n                  <IonCheckbox slot=\"start\" color=\"primary\" checked={item.checked} onIonChange={(e) => {\n                    toggleItem(item.id)\n                    removeCounterTodo()\n                  }} />\n                  <IonLabel className={item.checked ? 'checked' : ''}>{item.text}</IonLabel>\n\n                  <IonButton fill='clear' onClick={() => {\n                    setShowActionSheet(true)\n                    setItemToModifie(item.id)\n                  }}><IonIcon icon={create} color=\"primary\" slot=\"end\" /></IonButton>\n\n\n                  <IonActionSheet\n                    isOpen={showActionSheet}\n                    onDidDismiss={() => setShowActionSheet(false)}\n                    cssClass='my-custom-class'\n                    buttons={[{\n                      text: 'Supprimer',\n                      role: 'destructive',\n                      icon: trash,\n                      handler: () => {\n                        removeItem(itemToModifie)\n                      }\n                    },\n                    {\n                      text: 'Modifier',\n                      icon: create,\n                      handler: () => {\n                        setShowModifieAlert(true)\n                      }\n                    }, {\n                      text: 'Annuler',\n                      icon: close,\n                      role: 'cancel',\n                    }]}\n                  >\n                  </IonActionSheet>\n\n                  <IonAlert\n                    isOpen={showModifieAlert}\n                    onDidDismiss={() => setShowModifieAlert(false)}\n                    header={'Renommez votre tâche'}\n                    inputs={[\n                      {\n                        name: 'text',\n                        type: 'text',\n                        placeholder: 'Nouveau nom de la tâche',\n                      }]}\n                    buttons={[\n                      {\n                        text: 'Annuler',\n                        role: 'cancel',\n                        cssClass: 'secondary',\n                      },\n                      {\n                        text: 'Valider',\n                        handler: data => {\n                          modifieItem(itemToModifie, data.text)\n                        }\n                      }\n                    ]}\n                  /></IonItem >)\n            }\n          }))\n      }\n    }\n  }\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>To do list</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">To do list</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <IonSegment className='padding-lr' onIonChange={e => setSegmentValue(e.detail.value)}>\n          <IonSegmentButton value=\"all\">\n            <IonLabel>Tout</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value=\"unchecked\">\n            <IonLabel>À faire <IonBadge color=\"primary\">{counterTodo}</IonBadge></IonLabel>\n\n          </IonSegmentButton>\n        </IonSegment>\n\n\n        <IonList className='margin-bottom-120'>\n          {\n            displayItems(segmentValue)\n          }\n        </IonList>\n\n\n        <IonFooter className='footer'>\n\n          <IonItemGroup>\n\n            <IonItem>\n              <IonButton color=\"primary\" type=\"submit\" onClick={() => { setShowDeleteAllAlert(true) }}>Vider totalement la liste</IonButton>\n            </IonItem>\n\n            <IonAlert\n              isOpen={showDeleteAllAlert}\n              onDidDismiss={() => setShowDeleteAllAlert(false)}\n              cssClass='my-custom-class'\n              header={'Supprimer toutes les tâches'}\n              message={'<strong>Souhaitez-vous vraiment supprimer toutes les tâches actuelles ?</strong>'}\n              buttons={[\n                {\n                  text: 'Annuler',\n                  role: 'cancel',\n                  cssClass: 'secondary',\n                  handler: blah => {\n                    console.log('Confirm Cancel: blah');\n                  }\n                },\n                {\n                  text: 'Supprimer toutes les tâches',\n                  cssClass: 'primary',\n                  handler: () => {\n                    removeAllItems()\n                  }\n                }\n              ]}\n            />\n\n            <IonItem>\n              <IonInput placeholder=\"Qu'avez-vous en tête ?\" inputmode=\"text\" clearInput autofocus required onIonChange={e => { setText(e.detail.value); }}></IonInput>\n              <IonButton color=\"primary\" type=\"submit\" onClick={() => { addItem(text) }}>Créer</IonButton>\n            </IonItem>\n\n          </IonItemGroup>\n\n        </IonFooter>\n\n      </IonContent>\n\n\n    </IonPage>\n  );\n};\n\nexport default Home;","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport Home from './pages/Home';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nconst App: React.FC = () => (\n  <IonApp>\n    <IonReactRouter>\n      <IonRouterOutlet>\n        <Route path=\"/home\" component={Home} exact={true} />\n        <Route exact path=\"/\" render={() => <Redirect to=\"/home\" />} />\n      </IonRouterOutlet>\n    </IonReactRouter>\n  </IonApp>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}